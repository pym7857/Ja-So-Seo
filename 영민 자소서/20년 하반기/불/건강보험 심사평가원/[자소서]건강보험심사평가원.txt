[전산직_시스템운영 6급갑_일반]

■지원한 우리원 직무와 관련된 '본인의 경험'을 기술하시고, 해당 '경험'이 우리원 지원동기에 영향을 준 부분을 구체적으로 서술해 주시기 바랍니다.
현재 0 Bytes / 1000 Bytes 이내

건강보험심사평가원 전산직을 지원한 이유는 응용프로그램 개발, Server프로그래밍, 시스템 분야의 업무를 누구보다 잘 수행할 수 있다는 확신 때문이었습니다.  
재학 기간동안 python, Java, C, C++, C#, JavaScript 등 많은 언어들을 학습하고 실습해왔습니다. 개발 분야 또한 하나의 분야에 치중된것이 아닌, '데이터 분석, 웹 서버 프로그래밍, 시스템 프로그래밍, 이미지 프로세싱, 머신러닝, 자율주행' 등 많은 분야에 걸쳐 프로젝트를 제작해왔습니다.  
특히 대학교 3학년 운영체제 수업때 '리눅스 쉘' 프로그램을 만들어 높은 수행평가 점수를 받았던 경험이 있습니다. 해당 프로젝트를 통하여 리눅스의 기본지식을 학습했고, 기계어와 어셈블리어를 활용하여 SW개발을 해보며 시스템 개발에 큰 흥미를 갖게 되었습니다. 해당 경험은 시스템 개발 전체 과정에 대한 지식을 쌓게 해주는 결정적 계기가 되었고, 건강보험심사평가원 전산직 업무를 수행하며 해당 능력을 강화시켜  조직에 이바지할 수 있는 사람이 되고 싶다는 생각으로 지원을 하게 되었습니다.

■조직(또는 단체) 구성원들과 공동 목표를 달성하기 위해 협력했던 경험과 목표 달성과정에서 직면한 공동의 문제점을 해결하기 위해 본인이 노력한 부분을
구체적으로 서술해 주시기 바랍니다.
현재 0 Bytes / 1000 Bytes 이내

[자율주행 RC Car 제작 경험]
대학교 4학년 종합설계 과목 프로젝트로 자율주행 RC Car를 제작했었습니다.
저와 팀원 한명은 HoughLine Transform을 이용해 영상 내에서 차선인식이 되도록 만들었고, Tensorflow를 이용해서 Object Detection모델제작을 하였습니다. 차량조립은 팀원 중 나머지 한 친구가 전부 맡아서 진행하였습니다. 
먼저 SW 코딩작업을 마치고, 실제 RC Car에 SW를 적용하는 프로세스로 작업을 하였습니다. 그러나 그 과정에서 라즈베리파이를 cpu로 사용했었기에 picam영상과 실제 RC Car 동작 사이의 딜레이가 너무 심해져 제대로 자율주행이 이루어지지 않았습니다. 
문제해결을 위해 학부때 배운 수업내용과 연관지어 며칠간 스스로 연구해본 결과, Multi Thread Buffer 기술을 적용시킴으로써 문제를 해결하였습니다.  그 결과 약 52% 정도의 화면 딜레이 개선을 달성할 수 있었습니다. 하지만 여전히 딜레이 문제가 완전히 해결되지않아 팀 회의에서 Socket Programming 기법을 도입을 제안해보았고, 해당 기술을 적용하여 딜레이 이슈를 완전히 해결할 수 있었습니다.

■본인이 지금까지 중요하다 생각하여 개발한 '직무역량' 및 그 '과정'을 기술하고, 해당 역량을 바탕으로 얻은 성과를 입사 후 우리원에 어떻게 기여할 수 있는지
서술해 주시기 바랍니다.
현재 0 Bytes / 2000 Bytes 이내

[다양한 분야의 SW 개발 역량 강화]
가장 중요하다고 생각하는 개발자의 역량은, 정확한 이해를 바탕으로 다양한 분야를 경험해보고 실습해보는 것이라 생각합니다.
대학교 2학년때 처음 SW개발을 시작하여 현재까지 활발히 개발활동을 진행중에 있습니다. 한 분야에 치중해 개발활동을 진행하지 않고 소프트웨어공학의 여러 분야를 체험해보고 개발해왔습니다. 
첫 SW개발 입문은 python을 이용해 슈팅게임을 만들며 프로그래밍 언어의 여러 원리 및 기법등을 학습했습니다. python의 기본개념과 문법을 공부한 뒤, python의 pandas라이브러리 등을 이용하여 데이터분석 프로젝트를 진행 했었습니다. 이후, JSP를 이용하여 웹 프로그래밍 프로젝트를 진행하였고, 조금 더 웹 프로그래밍에 대해 알아보고 싶어서 python의 Flask를 이용해 웹 개발을 진행해 보기도 하고, 나아가 React 를 이용해 SPA 기반 웹 사이트를 제작해보기도 하였습니다. 이 과정에서 Back-end Server를 구축하기 위해 Node.js를 공부하기도 하였습니다. 
웹 프로그래밍에 관련된 여러 프로젝트들을 공부한 뒤, 머신러닝 개발에 관심이 생겨 '선형회귀 기법'이나 '로지스틱 기법'등을 공부하였습니다. 머신러닝에 대한 정확한 이론을 배우기 위해 타 대학에서 진행하는 'AOIT Architecture'과정을 수강하기도 하였습니다. 해당 과정을 수료한 뒤, 직접 선형회귀 기법을 이용한 농산물의 가격을 예측해 가격정보를 제공하는 웹사이트를 제작해 배포해보는 프로젝트를 진행했었습니다. 
상기 기술한 여러 프로젝트들을 진행했던 경험들을 활용해, 건강보험심사평가원에 입사하여 귀사의 발전에 이바지하고 싶습니다. 단지 이론만 알고있는것이 아니라, 실제 응용프로그램이 어떠한 원리로 동작하고 실행되는지 파악하여 정확한 분석이 이루어지도록 할 것입니다. 
이러한 SW응용프로그램에 대한 이해를 바탕으로, SW에 대한 명세서나 업무 프로세스등을 정리하여 회사에 도움을 줄 수 있는 사원이 되고 싶습니다. 또한 SW프로그램의 아키텍쳐를 이해하여, 사용자 요구 사항에 대한 업무를 수행하고, 다양한 모듈의 이슈들을 해결할 것입니다. 
나아가 소속팀의 프로세스를 이해하며, 말이 잘 통하는 긍정적,능동적인 성실한 팀원으로 자리잡고 싶습니다. 

■목표를 달성하기에 충분하지 못한 자원임에도 불구하고 이를 극복하고 최대의 효과를 이끌어 낸 경험을 서술해 주시기 바랍니다. 　
현재 0 Bytes / 2000 Bytes 이내

[데이터 분석과 머신러닝을 이용한 경영성과 예측 SW 제작]
현재 인턴 활동을 진행중인 LS ELECTRIC 에서 맡은 첫 업무는, 경영성과를 예측하는 SW 프로그램을 제작하는 일 이었습니다. 
입사 전에 python의 pandas 라이브러리를 이용해 데이터분석등을 진행해봤고, 크롤링 프로젝트 몇개를 진행해본 경험이 전부였지만, 스스로 관련 기술을 찾아보고 완수할 수 있을 것이라는 자신감이 있었습니다.
작년에 제작했었던 '선형회귀 기법을 이용한 당근 가격예측' 프로젝트를 참고하여 '다변인 선형회귀' 머신러닝 모델을 비교적 수월하게 제작할 수 있었습니다. 
하지만 학습에 쓰일 주문 판매량 데이터가 총 100개도 되지않는 수준의 양이었기 때문에 학습을 시키는데 많은 어려움을 겪었습니다. 학습 데이터가 많지 않았기에 당연하게도 모델의 정확도는 떨어지는 상황이었습니다. 
이러한 최악의 상황에서 팀 내의 매니저님들과 함께 며칠간의 스터디와 토론을 거친 뒤, 현재 쓰이고 있는 대외변수의 갯수를 늘려보자는 해결책이 도출 되었습니다. B2B 제조업 매출에 영향을 줄 수 있는 대외변수 약 100여개를 수집한 뒤, 각각의 대외변수를 대입했을때 얼마만큼의 상관도(correlation)가 나오는지 확인해보는 작업을 진행하였습니다. 
그러나, 조사 결과 높은 correlation이 나오는 대외변수를 찾을 수 없었고, 결국 기존의 대외변수들을 이용해 프로젝트를 진행했어야만 했습니다. 
결국 며칠간의 스터디를 더 거친 뒤, 주문잔 데이터를 반영해 매출 판매량을 예측해보는 작업을 진행하였습니다. 주문잔 데이터를 반영한 결과, 엄청난 개선이 이루어진것은 아니었지만 전체 데이터에 긍정적인 영향을 미치게 되었습니다. 
이제 모델의 정확도가 개선이 되었으니 해당 모델을 이용해 경영진들에게 결과 화면을 보여줘야 했습니다. 팀 내에 웹 프로그래밍을 다룰줄 아는 사람이 저 혼자 밖에 없었기에, 웹을 통해 모델의 결과를 보여줄 수 있는 'What if simulation' 프로젝트를 혼자서 진행하였습니다. python의 Flask를 이용해 Back-end와 Front-end를 제작하였고, 결과값 등은 python의 matplotlib, seaborn등을 이용해 시각화 작업을 진행하였습니다. 
열심히 노력한 결과, '경영성과 예측' 프로젝트를 성공적으로 마칠 수 있었고, What if simulation을 이용해 경영진들에게 명확하게 프로젝트 진행상황을 보고할 수 있었습니다.   

■다른 구성원과 의견이나 생각의 차이로 '갈등'이 발생하여, 이를 본인만의 의사소통 노하우로 해결한 경험을 서술해 주시기 바랍니다.
현재 0 Bytes / 2000 Bytes 이내

[정확한 사실 자료를 근거로 팀원들간의 의견차이를 좁혔었던 경험]
대학교 3학년, 겨울방학에 대학동기들과 AI 공모전에 출품하기 위해 지원을 했었습니다. 당시 AI를 공부하고 프로젝트를 진행했던 경험을 가지고 있어서 팀장 역할을 맡았었습니다. 
공모전에 응모하기 위해서, 알고있는 AI기법과 해당 주최 기업의 기술을 융합하여 새로운 프로젝트를 도출해냈어야 했습니다. 팀원들에게 여러 아이디어를 브레인스토밍 방식으로 제출하도록 했고, 각각의 아이디어에 대한 피드백을 진행하였습니다. 
그러나, AI기법에 대해 팀원들 스스로 공부해보고 생각해온 아이디어와 주제가 너무 다양했습니다. 그 중 의견이 비슷한 팀원들에 대한 아이디어를 모아 조금 더 세부적인 주제로 제작해보면 좋을것 같다는 생각을 하게 되었습니다. 
팀원들의 의견은 크게 openCV를 활용한 이미지 프로세싱 딥러닝 기법과, 머신러닝의 분류기법을 이용하는것으로 나뉘었습니다. 전자의 경우 이미 누군가가 제작해놓은 YOLO 라이브러리를 이용하여 프로젝트를 진행하는 일이었기 때문에, 팀원들 스스로 할 수 있는 범위가 좁아질 수 밖에 없었습니다. 
하지만 후자의 경우 '이진분류'와 '다중분류'등 여러 분류 기법들을 적용시켜볼 수 있었고, CEE(Cross Entropy Error)를 이용해 정확한 Error수치를 확인할 수 있었습니다. 다만, MSE(Mean Squared Error)가 학습과 평가를 동시에 진행할 수 있는 반면, CEE는 평가를 위한 기준이 따로 존재 (accuracy 등)했기 때문에 번거로운 작업이 될 수 있다는 단점이 존재하기도 하였습니다.
이러한 상황에서 과거 'AIOT Architecture 과정'을 수료하며 배웠던 이론들을 팀원들에게 설명함으로써 팀원 간의 생각 차이를 좁힐 수 있었습니다. 그 후, 팀원들의 의견을 종합하여 공유, 첨삭 작업 등을 진행하였습니다.
최종적으로 Tensorflow를 이용하여 분류Ai모델을 만들기로 결론이 도출되었고, 성공적으로 공모전에 응시할 수 있었습니다. 
이처럼 해당 이론을 정확히 팀원들에게 전달하고 설명함으로써 팀원들의 의견을 하나로 모을 수 있었습니다. 팀원들이 저의 주장을 수긍하고 따랐었던 이유는, 정확한 사실에 근거한 자료가 기반이 되었기 때문이라고 생각합니다. 
이처럼 항상 자료조사를 게을리 하지않고 정확한 논거로 팀원들과 소통하는 열린 사원이 되고싶습니다.

■본인이 생각하는 「공정함」의 정의와 판단기준을 기술하고 그 공정함으로 좋은 결과를 얻은 '경험'을 서술해 주시기 바랍니다.	
현재 0 Bytes / 2000 Bytes 이내

[모두의 의견이 반영되는 프로젝트 수행]
'공정함'이란, 팀원들 중 누구의 의견도 묵살되지 않고 자유롭게 토론할 수 있는것이라 생각합니다. 저에게 공정하다는 의미는 'domain knowledge가 낮다고 해서 그 사람의 의견을 소외시키지 않는다' 입니다.
작년 타 대학교에서 'AIOT Architecture 과정'을 수료하며 이론 수업을 모두 배운 후, 스마트팜(Smart Farm) 프로젝트를 진행할 때 팀장을 맡아 진행하였습니다. 스마트팜 구축을 위한 CNN 모델제작 작업을 진행하던 도중, 기존에 있는 AlexNet을 쓰는것으로 의견이 모아졌었습니다. 
하지만 팀원 중 1학년이었던 한 친구가 직접 Low단부터 CNN을 만드는것을 제안했습니다. 
다른 팀원들은 CNN말고도 해야 할 작업이 많은데 밑단부터 작업을 하는것은 힘들것 같다고 저에게 의견을 제시했고, 해당 건에 대해 어떻게 할지 고민하다 교수님께 의견을 여쭤보게 되었습니다. 
교수님께서는 스마트팜을 당장 완성하는것보다 직접 CNN의 원리를 깨닫고 실습해보는게 중요하다는 말씀을 해주셨습니다. 교수님께 조언을 구한 뒤, 팀원들의 다수 의견도 물론 중요하지만, 1학년 팀원의 말을 따라 CNN을 밑단부터 작업하기로 결정했습니다.
다행히도 팀원들은 팀장인 저의 의견에 귀 기울여 주었고, CNN모델을 제작하기 위해 필요한 HyperParameter(필터의 크기, 개수, MaxPooling, Stride, Padding)를 조사했습니다. 이후 조사한 내용들을 바탕으로 CNN모델을 직접 수행시켜가며 저희팀만의 독자적인 모델을 제작할 수 있었습니다. 
실제로 CNN모델을 직접 제작해보며 CNN이론에 대해 훨씬 깊게 이해할 수 있었고, 이론으로만 배웠던 지식들을 모델 제작에 적용해봄으로써 더욱 탄탄한 기초를 수립할 수 있었습니다. 또한 직접 모델을 제작하지 않고 기존의 상용모델을 가져다 썼으면 몰랐을 이론들이 스마트팜의 다른 SW작업을 할 때도 쓰이게 되었습니다.  
1학년이고 AI에 대해 잘 모르는 사람이라 해서 의견을 묵살하는것보다, 끝까지 모든 팀원들의 의견에 귀 기울이는 공정함을 지킨 결과, 더욱 완성도있는 프로젝트 작품을 만들 수 있었습니다. 이는 앞으로 어떠한 프로젝트들을 진행하던지, 조직의 팀원 또는 팀장으로써 가져야할 마인드라고 생각합니다. 
